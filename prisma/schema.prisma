// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  Int  @id @default(autoincrement())
  username String @db.VarChar(255) @unique
  email String @db.VarChar(255) @unique
  password String @db.VarChar(255) @unique
  bio String?
  location String?
  role UserRole 
  serviceRequests ServiceRequest[]
  createdAt DateTime @default(now())
}


model Stylist{
  id  Int  @id @default(autoincrement())
  username String @db.VarChar(255) @unique
  email String @db.VarChar(255) @unique
  password String @db.VarChar(255) @unique
  bio String?
  location String?
  catalogue Service[]
  productCatalogue Product[]
  role UserRole  
  serviceRequests ServiceRequest[]
  createdAt DateTime @default(now())
}

model ServiceRequest{
  id Int @id @default(autoincrement())
  message String?
  sender User @relation(fields: [senderId], references: [id])
  senderId Int
  receiver Stylist @relation(fields: [receiverId], references: [id])
  receiverId Int
  status ServiceRequestStatus
  createdAt DateTime @default(now())
} 

model Service {
  id Int @id @default(autoincrement())
  name String
  price Float
  owner Stylist @relation(fields: [ownerId], references: [id])
  ownerId Int @unique
  createdAt DateTime @default(now())
}


model Product{
  id Int @id @default(autoincrement())
  name String
  price Float
  quantity Int
  owner Stylist @relation(fields: [ownerId], references: [id])
  ownerId Int @unique
  createdAt DateTime @default(now())
}
  

enum UserRole{
  USER
  STYLIST
}

enum ServiceRequestStatus{
  REQUESTED
  REJECTED
  ACCEPTED
}

